{"version":3,"file":"MinecraftEventDrivenForm.js","sources":["../src/Errors.ts","../src/Arguments.ts","../src/Event.ts","../src/Translate.ts"],"sourcesContent":["export class FormError extends Error {\n  constructor(msg: string) {\n    super(msg);\n  }\n}\n\nexport class FormArgumentError extends FormError {\n  constructor(\n    readonly path: string,\n    readonly step: string,\n    readonly current: unknown\n  ) {\n    super(`Invalid path: ${path} at step: ${step} in object: ${JSON.stringify(current)}`);\n  }\n}\n","import { FormArgumentError } from './Errors';\nimport { NormalizedTextContent, TextContent } from './Primitives';\n\n/**\n * @inline\n */\ninterface ToString {\n  toString(): string;\n}\n\n/**\n * @inline\n */\ntype StringResolvableMap = {\n  [key: string]: StringResolvable;\n};\n\nexport type StringResolvable = ToString | StringResolvableMap;\n\nexport class FormArguments {\n  private _args: Record<string, StringResolvable> = {};\n  set(name: string, arg: StringResolvable) {\n    this._args[name] = arg;\n  }\n\n  setAll(args: Record<string, StringResolvable>) {\n    this._args = {\n      ...this._args,\n      ...args,\n    };\n  }\n\n  getAll() {\n    return this._args;\n  }\n\n  get<Arg extends StringResolvable>(name: string): Arg {\n    return this._args[name] as Arg;\n  }\n\n  resolvePath(path: string): StringResolvable {\n    let current: StringResolvable = this._args;\n    const splitPath = path.split('.');\n    for (const step of splitPath) {\n      if (typeof current === 'object' && step in current) {\n        current = (current as StringResolvableMap)[step];\n      } else {\n        throw new FormArgumentError(path, step, current);\n      }\n    }\n\n    return current;\n  }\n\n  resolveTemplate(template: string) {\n    return template.replace(/\\{\\s*([^}\\s]+)\\s*\\}/g, (_, p1) => {\n      return this.resolvePath(p1).toString();\n    });\n  }\n\n  normalize(content: TextContent): NormalizedTextContent {\n    if (typeof content === 'string') {\n      return {\n        type: 'text',\n        text: this.resolveTemplate(content),\n      };\n    } else if (Array.isArray(content)) {\n      return {\n        type: 'array',\n        array: content.map((c) => this.normalize(c)),\n      };\n    } else {\n      return {\n        type: 'translate',\n        translate: this.resolveTemplate(content.translate),\n        args: content.args ? content.args.map((a) => this.normalize(a)) : undefined,\n      };\n    }\n  }\n}\n","import { FormError } from './Errors';\nimport { FormHub } from './Hub';\nimport { DualButtonForm, Form } from './form';\nimport { InputForm } from './form/Input';\nimport { MultiButtonForm } from './form/MultiButton';\nimport { FormArguments } from './Arguments';\nimport { EventAction, FormAction } from './Primitives';\n\nexport class FormEventProducer {\n  protected _hub: FormHub;\n  protected _formAction: FormAction | undefined;\n  protected _args: FormArguments;\n\n  static fromFormHub(hub: FormHub): FormEventProducer {\n    if (typeof hub.entrypoint === 'string') {\n      return new FormEventProducer(hub, {\n        form: hub.entrypoint,\n      });\n    } else {\n      return new FormEventProducer(hub, {\n        form: hub.entrypoint.form,\n        event: hub.entrypoint.events,\n        eventArgs: hub.entrypoint.eventArgs,\n        setArgs: hub.entrypoint.initialArgs,\n      });\n    }\n  }\n\n  constructor(hub: FormHub, formAction?: FormAction, previousArgs?: FormArguments) {\n    this._hub = hub;\n    this._formAction = formAction;\n    this._args = new FormArguments();\n\n    if (this._formAction?.copyArgs && previousArgs) {\n      this._args.setAll(previousArgs.getAll());\n    }\n\n    if (this._formAction?.setArgs) {\n      this._args.setAll(this._formAction.setArgs);\n    }\n  }\n\n  get args() {\n    return this._args;\n  }\n\n  getInitialForm() {\n    return this._formAction?.form ? this._hub.forms[this._formAction.form] : undefined;\n  }\n\n  *iterator() {\n    if (this._formAction) {\n      if (!this._formAction.event) {\n        yield new FormEvent(this._hub, undefined, this._args);\n      } else if (typeof this._formAction.event === 'string') {\n        yield new FormEvent(\n          this._hub,\n          {\n            event: this._formAction.event,\n            args: this._formAction.eventArgs,\n          },\n          this._args\n        );\n      } else {\n        for (const event of this._formAction.event) {\n          yield new FormEvent(\n            this._hub,\n            {\n              event: event.event,\n              args: event.args ?? this._formAction.eventArgs,\n            },\n            this._args\n          );\n        }\n      }\n    }\n  }\n}\n\ntype FormType = 'multi-button' | 'input' | 'dual-button';\ntype LoadFormReturn<T extends FormType | undefined> = T extends 'multi-button'\n  ? MultiButtonForm\n  : T extends 'input'\n    ? InputForm\n    : T extends 'dual-button'\n      ? DualButtonForm\n      : Form;\n\nexport class FormEvent {\n  protected _form: Form | undefined = undefined;\n  protected _name: string | undefined = undefined;\n  protected _continueProcessing: boolean = true;\n  protected readonly _hub: FormHub;\n  protected _args: FormArguments;\n  protected _eventArgs: Array<unknown> = [];\n\n  constructor(hub: FormHub, eventAction: EventAction | undefined, args: FormArguments) {\n    this._hub = hub;\n    this._args = args;\n\n    if (eventAction) {\n      this._name = eventAction.event;\n      if (eventAction.args) {\n        this._eventArgs = eventAction.args;\n      }\n    }\n  }\n\n  loadForm<T extends FormType>(name: string, type?: T | undefined): LoadFormReturn<T> {\n    if (name in this._hub.forms) {\n      const form = this._hub.forms[name];\n      if (type && form.type !== type) {\n        throw new FormError(`Invalid type ${type} for form named ${name}. The actual type is ${form.type}`);\n      }\n\n      return JSON.parse(JSON.stringify(form));\n    }\n\n    throw new FormError(`Unknown form named ${name}`);\n  }\n\n  set form(form) {\n    this._form = form;\n  }\n\n  get form() {\n    return this._form;\n  }\n\n  get name() {\n    return this._name;\n  }\n\n  get args() {\n    return this._args;\n  }\n\n  get eventArgs() {\n    return this._eventArgs;\n  }\n\n  get continueProcessing() {\n    return this._continueProcessing;\n  }\n\n  cancelProcessing() {\n    this._continueProcessing = false;\n  }\n}\n\n/**\n * @inline\n */\ntype EventReceiverFunction = (event: FormEvent) => Promise<void>;\n/**\n * @inline\n */\ntype EventReceiverMap = Record<string, EventReceiverFunction>;\nexport type EventReceiver = EventReceiverFunction | EventReceiverMap | undefined;\n\nexport const triggerEvent = async (\n  eventProducer: FormEventProducer,\n  receiver: EventReceiver\n): Promise<Form | undefined> => {\n  let form: Form | undefined = eventProducer.getInitialForm();\n\n  if (receiver) {\n    for (const event of eventProducer.iterator()) {\n      event.form = form;\n\n      if (event.name) {\n        if (typeof receiver === 'function') {\n          await receiver(event);\n        } else if (event.name in receiver) {\n          await receiver[event.name](event);\n        }\n      }\n\n      form = event.form;\n\n      if (!event.continueProcessing) {\n        break;\n      }\n    }\n  }\n\n  return form;\n};\n","import { TextContent, Translate } from './Primitives';\n\nexport const _ = (value: string, ...args: Array<TextContent>): Translate => ({\n  translate: value,\n  args: args.length > 0 ? args : undefined,\n});\n"],"names":[],"mappings":"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"}